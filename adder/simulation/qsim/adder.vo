// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "02/10/2023 15:57:37"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module set_v (
	A_l,
	B4,
	B3,
	B2,
	B1,
	B0,
	A,
	B_l);
output 	[4:0] A_l;
input 	B4;
input 	B3;
input 	B2;
input 	B1;
input 	B0;
input 	[4:0] A;
output 	[4:0] B_l;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \A_l[4]~output_o ;
wire \A_l[3]~output_o ;
wire \A_l[2]~output_o ;
wire \A_l[1]~output_o ;
wire \A_l[0]~output_o ;
wire \B_l[4]~output_o ;
wire \B_l[3]~output_o ;
wire \B_l[2]~output_o ;
wire \B_l[1]~output_o ;
wire \B_l[0]~output_o ;
wire \B4~input_o ;
wire \A[4]~input_o ;
wire \inst9878[4]~0_combout ;
wire \B3~input_o ;
wire \A[3]~input_o ;
wire \inst12[3]~0_combout ;
wire \B2~input_o ;
wire \A[2]~input_o ;
wire \inst12[2]~1_combout ;
wire \B1~input_o ;
wire \A[1]~input_o ;
wire \inst12[1]~2_combout ;
wire \B0~input_o ;
wire \A[0]~input_o ;
wire \inst12[0]~3_combout ;
wire \inst15[3]~0_combout ;
wire \inst15[2]~1_combout ;
wire \inst15[1]~2_combout ;
wire \inst15[0]~3_combout ;
wire [4:0] inst15;


cycloneive_io_obuf \A_l[4]~output (
	.i(\inst9878[4]~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\A_l[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \A_l[4]~output .bus_hold = "false";
defparam \A_l[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \A_l[3]~output (
	.i(\inst12[3]~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\A_l[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \A_l[3]~output .bus_hold = "false";
defparam \A_l[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \A_l[2]~output (
	.i(\inst12[2]~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\A_l[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \A_l[2]~output .bus_hold = "false";
defparam \A_l[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \A_l[1]~output (
	.i(\inst12[1]~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\A_l[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \A_l[1]~output .bus_hold = "false";
defparam \A_l[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \A_l[0]~output (
	.i(\inst12[0]~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\A_l[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \A_l[0]~output .bus_hold = "false";
defparam \A_l[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \B_l[4]~output (
	.i(inst15[4]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\B_l[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \B_l[4]~output .bus_hold = "false";
defparam \B_l[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \B_l[3]~output (
	.i(\inst15[3]~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\B_l[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \B_l[3]~output .bus_hold = "false";
defparam \B_l[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \B_l[2]~output (
	.i(\inst15[2]~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\B_l[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \B_l[2]~output .bus_hold = "false";
defparam \B_l[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \B_l[1]~output (
	.i(\inst15[1]~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\B_l[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \B_l[1]~output .bus_hold = "false";
defparam \B_l[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \B_l[0]~output (
	.i(\inst15[0]~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\B_l[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \B_l[0]~output .bus_hold = "false";
defparam \B_l[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \B4~input (
	.i(B4),
	.ibar(gnd),
	.o(\B4~input_o ));
// synopsys translate_off
defparam \B4~input .bus_hold = "false";
defparam \B4~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A[4]~input (
	.i(A[4]),
	.ibar(gnd),
	.o(\A[4]~input_o ));
// synopsys translate_off
defparam \A[4]~input .bus_hold = "false";
defparam \A[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst9878[4]~0 (
// Equation(s):
// \inst9878[4]~0_combout  = (\B4~input_o  & \A[4]~input_o )

	.dataa(\B4~input_o ),
	.datab(\A[4]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst9878[4]~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst9878[4]~0 .lut_mask = 16'h8888;
defparam \inst9878[4]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \B3~input (
	.i(B3),
	.ibar(gnd),
	.o(\B3~input_o ));
// synopsys translate_off
defparam \B3~input .bus_hold = "false";
defparam \B3~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst12[3]~0 (
// Equation(s):
// \inst12[3]~0_combout  = (\A[4]~input_o  & (\B3~input_o )) # (!\A[4]~input_o  & ((\A[3]~input_o )))

	.dataa(\B3~input_o ),
	.datab(\A[3]~input_o ),
	.datac(gnd),
	.datad(\A[4]~input_o ),
	.cin(gnd),
	.combout(\inst12[3]~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst12[3]~0 .lut_mask = 16'hAACC;
defparam \inst12[3]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \B2~input (
	.i(B2),
	.ibar(gnd),
	.o(\B2~input_o ));
// synopsys translate_off
defparam \B2~input .bus_hold = "false";
defparam \B2~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst12[2]~1 (
// Equation(s):
// \inst12[2]~1_combout  = (\A[4]~input_o  & (\B2~input_o )) # (!\A[4]~input_o  & ((\A[2]~input_o )))

	.dataa(\B2~input_o ),
	.datab(\A[2]~input_o ),
	.datac(gnd),
	.datad(\A[4]~input_o ),
	.cin(gnd),
	.combout(\inst12[2]~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst12[2]~1 .lut_mask = 16'hAACC;
defparam \inst12[2]~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \B1~input (
	.i(B1),
	.ibar(gnd),
	.o(\B1~input_o ));
// synopsys translate_off
defparam \B1~input .bus_hold = "false";
defparam \B1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst12[1]~2 (
// Equation(s):
// \inst12[1]~2_combout  = (\A[4]~input_o  & (\B1~input_o )) # (!\A[4]~input_o  & ((\A[1]~input_o )))

	.dataa(\B1~input_o ),
	.datab(\A[1]~input_o ),
	.datac(gnd),
	.datad(\A[4]~input_o ),
	.cin(gnd),
	.combout(\inst12[1]~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst12[1]~2 .lut_mask = 16'hAACC;
defparam \inst12[1]~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \B0~input (
	.i(B0),
	.ibar(gnd),
	.o(\B0~input_o ));
// synopsys translate_off
defparam \B0~input .bus_hold = "false";
defparam \B0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst12[0]~3 (
// Equation(s):
// \inst12[0]~3_combout  = (\A[4]~input_o  & (\B0~input_o )) # (!\A[4]~input_o  & ((\A[0]~input_o )))

	.dataa(\B0~input_o ),
	.datab(\A[0]~input_o ),
	.datac(gnd),
	.datad(\A[4]~input_o ),
	.cin(gnd),
	.combout(\inst12[0]~3_combout ),
	.cout());
// synopsys translate_off
defparam \inst12[0]~3 .lut_mask = 16'hAACC;
defparam \inst12[0]~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst15[4] (
// Equation(s):
// inst15[4] = (\B4~input_o ) # (\A[4]~input_o )

	.dataa(\B4~input_o ),
	.datab(\A[4]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(inst15[4]),
	.cout());
// synopsys translate_off
defparam \inst15[4] .lut_mask = 16'hEEEE;
defparam \inst15[4] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst15[3]~0 (
// Equation(s):
// \inst15[3]~0_combout  = (\A[4]~input_o  & (\A[3]~input_o )) # (!\A[4]~input_o  & ((\B3~input_o )))

	.dataa(\A[3]~input_o ),
	.datab(\B3~input_o ),
	.datac(gnd),
	.datad(\A[4]~input_o ),
	.cin(gnd),
	.combout(\inst15[3]~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst15[3]~0 .lut_mask = 16'hAACC;
defparam \inst15[3]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst15[2]~1 (
// Equation(s):
// \inst15[2]~1_combout  = (\A[4]~input_o  & (\A[2]~input_o )) # (!\A[4]~input_o  & ((\B2~input_o )))

	.dataa(\A[2]~input_o ),
	.datab(\B2~input_o ),
	.datac(gnd),
	.datad(\A[4]~input_o ),
	.cin(gnd),
	.combout(\inst15[2]~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst15[2]~1 .lut_mask = 16'hAACC;
defparam \inst15[2]~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst15[1]~2 (
// Equation(s):
// \inst15[1]~2_combout  = (\A[4]~input_o  & (\A[1]~input_o )) # (!\A[4]~input_o  & ((\B1~input_o )))

	.dataa(\A[1]~input_o ),
	.datab(\B1~input_o ),
	.datac(gnd),
	.datad(\A[4]~input_o ),
	.cin(gnd),
	.combout(\inst15[1]~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst15[1]~2 .lut_mask = 16'hAACC;
defparam \inst15[1]~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst15[0]~3 (
// Equation(s):
// \inst15[0]~3_combout  = (\A[4]~input_o  & (\A[0]~input_o )) # (!\A[4]~input_o  & ((\B0~input_o )))

	.dataa(\A[0]~input_o ),
	.datab(\B0~input_o ),
	.datac(gnd),
	.datad(\A[4]~input_o ),
	.cin(gnd),
	.combout(\inst15[0]~3_combout ),
	.cout());
// synopsys translate_off
defparam \inst15[0]~3 .lut_mask = 16'hAACC;
defparam \inst15[0]~3 .sum_lutc_input = "datac";
// synopsys translate_on

assign A_l[4] = \A_l[4]~output_o ;

assign A_l[3] = \A_l[3]~output_o ;

assign A_l[2] = \A_l[2]~output_o ;

assign A_l[1] = \A_l[1]~output_o ;

assign A_l[0] = \A_l[0]~output_o ;

assign B_l[4] = \B_l[4]~output_o ;

assign B_l[3] = \B_l[3]~output_o ;

assign B_l[2] = \B_l[2]~output_o ;

assign B_l[1] = \B_l[1]~output_o ;

assign B_l[0] = \B_l[0]~output_o ;

endmodule
