// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "02/07/2023 21:19:32"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ula
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ula_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [4:0] A;
reg [4:0] B;
reg S0;
reg S1;
reg S2;
// wires                                               
wire AH;
wire AL;
wire [5:0] arit;
wire BH;
wire BL;
wire CH;
wire CL;
wire COMPARISON;
wire DH;
wire DL;
wire EH;
wire EL;
wire FH;
wire FL;
wire GH;
wire GL;
wire Signed;

// assign statements (if any)                          
ula i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.AH(AH),
	.AL(AL),
	.arit(arit),
	.B(B),
	.BH(BH),
	.BL(BL),
	.CH(CH),
	.CL(CL),
	.COMPARISON(COMPARISON),
	.DH(DH),
	.DL(DL),
	.EH(EH),
	.EL(EL),
	.FH(FH),
	.FL(FL),
	.GH(GH),
	.GL(GL),
	.S0(S0),
	.S1(S1),
	.S2(S2),
	.\Signed (Signed)
);
initial 
begin 
#1000000 $finish;
end 
// A[ 4 ]
initial
begin
	A[4] = 1'b0;
end 
// A[ 3 ]
initial
begin
	A[3] = 1'b0;
end 
// A[ 2 ]
initial
begin
	A[2] = 1'b0;
end 
// A[ 1 ]
initial
begin
	A[1] = 1'b1;
end 
// A[ 0 ]
initial
begin
	A[0] = 1'b0;
end 
// B[ 4 ]
initial
begin
	B[4] = 1'b0;
end 
// B[ 3 ]
initial
begin
	B[3] = 1'b0;
end 
// B[ 2 ]
initial
begin
	B[2] = 1'b0;
end 
// B[ 1 ]
initial
begin
	B[1] = 1'b0;
end 
// B[ 0 ]
initial
begin
	B[0] = 1'b0;
end 

// S0
initial
begin
	S0 = 1'b0;
end 

// S1
initial
begin
	S1 = 1'b0;
end 

// S2
initial
begin
	S2 = 1'b0;
end 
endmodule

