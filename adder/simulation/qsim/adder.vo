// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "01/28/2023 09:46:30"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module binary_to_bcd (
	BCD,
	binary);
output 	[8:0] BCD;
input 	[5:0] binary;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \BCD[8]~output_o ;
wire \BCD[7]~output_o ;
wire \BCD[6]~output_o ;
wire \BCD[5]~output_o ;
wire \BCD[4]~output_o ;
wire \BCD[3]~output_o ;
wire \BCD[2]~output_o ;
wire \BCD[1]~output_o ;
wire \BCD[0]~output_o ;
wire \inst4~o ;
wire \binary[1]~input_o ;
wire \binary[0]~input_o ;
wire \binary[2]~input_o ;
wire \inst|inst5~combout ;
wire \binary[3]~input_o ;
wire \inst3|inst5~combout ;
wire \inst3|inst7~combout ;
wire \inst3|inst8~0_combout ;
wire \inst3|inst9~combout ;
wire \inst1~o ;


cycloneive_io_obuf \BCD[8]~output (
	.i(\inst4~o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\BCD[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \BCD[8]~output .bus_hold = "false";
defparam \BCD[8]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \BCD[7]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\BCD[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \BCD[7]~output .bus_hold = "false";
defparam \BCD[7]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \BCD[6]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\BCD[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \BCD[6]~output .bus_hold = "false";
defparam \BCD[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \BCD[5]~output (
	.i(!\inst|inst5~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\BCD[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \BCD[5]~output .bus_hold = "false";
defparam \BCD[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \BCD[4]~output (
	.i(!\inst3|inst5~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\BCD[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \BCD[4]~output .bus_hold = "false";
defparam \BCD[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \BCD[3]~output (
	.i(!\inst3|inst7~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\BCD[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \BCD[3]~output .bus_hold = "false";
defparam \BCD[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \BCD[2]~output (
	.i(\inst3|inst8~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\BCD[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \BCD[2]~output .bus_hold = "false";
defparam \BCD[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \BCD[1]~output (
	.i(!\inst3|inst9~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\BCD[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \BCD[1]~output .bus_hold = "false";
defparam \BCD[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \BCD[0]~output (
	.i(\inst1~o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\BCD[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \BCD[0]~output .bus_hold = "false";
defparam \BCD[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf inst4(
	.i(binary[5]),
	.ibar(gnd),
	.o(\inst4~o ));
// synopsys translate_off
defparam inst4.bus_hold = "false";
defparam inst4.simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \binary[1]~input (
	.i(binary[1]),
	.ibar(gnd),
	.o(\binary[1]~input_o ));
// synopsys translate_off
defparam \binary[1]~input .bus_hold = "false";
defparam \binary[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \binary[0]~input (
	.i(binary[0]),
	.ibar(gnd),
	.o(\binary[0]~input_o ));
// synopsys translate_off
defparam \binary[0]~input .bus_hold = "false";
defparam \binary[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \binary[2]~input (
	.i(binary[2]),
	.ibar(gnd),
	.o(\binary[2]~input_o ));
// synopsys translate_off
defparam \binary[2]~input .bus_hold = "false";
defparam \binary[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst5 (
// Equation(s):
// \inst|inst5~combout  = ((!\binary[1]~input_o  & !\binary[0]~input_o )) # (!\binary[2]~input_o )

	.dataa(gnd),
	.datab(\binary[1]~input_o ),
	.datac(\binary[0]~input_o ),
	.datad(\binary[2]~input_o ),
	.cin(gnd),
	.combout(\inst|inst5~combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst5 .lut_mask = 16'h03FF;
defparam \inst|inst5 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \binary[3]~input (
	.i(binary[3]),
	.ibar(gnd),
	.o(\binary[3]~input_o ));
// synopsys translate_off
defparam \binary[3]~input .bus_hold = "false";
defparam \binary[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst3|inst5 (
// Equation(s):
// \inst3|inst5~combout  = (\binary[2]~input_o  & ((\binary[0]~input_o  & ((!\binary[1]~input_o ) # (!\binary[3]~input_o ))) # (!\binary[0]~input_o  & ((\binary[1]~input_o ))))) # (!\binary[2]~input_o  & (((!\binary[0]~input_o  & !\binary[3]~input_o )) # 
// (!\binary[1]~input_o )))

	.dataa(\binary[2]~input_o ),
	.datab(\binary[0]~input_o ),
	.datac(\binary[3]~input_o ),
	.datad(\binary[1]~input_o ),
	.cin(gnd),
	.combout(\inst3|inst5~combout ),
	.cout());
// synopsys translate_off
defparam \inst3|inst5 .lut_mask = 16'h2BDD;
defparam \inst3|inst5 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst3|inst7 (
// Equation(s):
// \inst3|inst7~combout  = (\binary[3]~input_o  & ((\binary[0]~input_o ) # ((\binary[1]~input_o ) # (!\binary[2]~input_o )))) # (!\binary[3]~input_o  & ((\binary[0]~input_o  $ (\binary[2]~input_o )) # (!\binary[1]~input_o )))

	.dataa(\binary[3]~input_o ),
	.datab(\binary[0]~input_o ),
	.datac(\binary[1]~input_o ),
	.datad(\binary[2]~input_o ),
	.cin(gnd),
	.combout(\inst3|inst7~combout ),
	.cout());
// synopsys translate_off
defparam \inst3|inst7 .lut_mask = 16'hBDEF;
defparam \inst3|inst7 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst3|inst8~0 (
// Equation(s):
// \inst3|inst8~0_combout  = (\binary[2]~input_o  & (!\binary[0]~input_o  & ((\binary[1]~input_o ) # (!\binary[3]~input_o )))) # (!\binary[2]~input_o  & (\binary[0]~input_o  & ((\binary[3]~input_o ) # (!\binary[1]~input_o ))))

	.dataa(\binary[3]~input_o ),
	.datab(\binary[1]~input_o ),
	.datac(\binary[2]~input_o ),
	.datad(\binary[0]~input_o ),
	.cin(gnd),
	.combout(\inst3|inst8~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst3|inst8~0 .lut_mask = 16'h0BD0;
defparam \inst3|inst8~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst3|inst9 (
// Equation(s):
// \inst3|inst9~combout  = (\binary[1]~input_o  & ((\binary[0]~input_o  & ((\binary[2]~input_o ) # (\binary[3]~input_o ))) # (!\binary[0]~input_o  & ((!\binary[3]~input_o ) # (!\binary[2]~input_o ))))) # (!\binary[1]~input_o  & (\binary[3]~input_o  $ 
// (((\binary[0]~input_o ) # (!\binary[2]~input_o )))))

	.dataa(\binary[1]~input_o ),
	.datab(\binary[0]~input_o ),
	.datac(\binary[2]~input_o ),
	.datad(\binary[3]~input_o ),
	.cin(gnd),
	.combout(\inst3|inst9~combout ),
	.cout());
// synopsys translate_off
defparam \inst3|inst9 .lut_mask = 16'h9AE7;
defparam \inst3|inst9 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf inst1(
	.i(binary[4]),
	.ibar(gnd),
	.o(\inst1~o ));
// synopsys translate_off
defparam inst1.bus_hold = "false";
defparam inst1.simulate_z_as = "z";
// synopsys translate_on

assign BCD[8] = \BCD[8]~output_o ;

assign BCD[7] = \BCD[7]~output_o ;

assign BCD[6] = \BCD[6]~output_o ;

assign BCD[5] = \BCD[5]~output_o ;

assign BCD[4] = \BCD[4]~output_o ;

assign BCD[3] = \BCD[3]~output_o ;

assign BCD[2] = \BCD[2]~output_o ;

assign BCD[1] = \BCD[1]~output_o ;

assign BCD[0] = \BCD[0]~output_o ;

endmodule
